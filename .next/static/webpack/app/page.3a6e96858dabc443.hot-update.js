"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/NetworkTest.tsx":
/*!********************************************!*\
  !*** ./src/app/components/NetworkTest.tsx ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NetworkTest)\n/* harmony export */ });\nfunction NetworkTest(param) {\n    let { onNetworkStats, showOnlyButton, onError } = param;\n    // ... rest of your code ...\n    const test = async ()=>{\n        try {\n            setError(null);\n            onError === null || onError === void 0 ? void 0 : onError(null);\n            const res = await fetch('/api/network');\n            const data = await res.json();\n            setStats(data);\n            onNetworkStats(data);\n        } catch (err) {\n            console.error('Network test error:', err);\n            const message = 'Failed to run network test. Please try again.';\n            setError(message);\n            onError === null || onError === void 0 ? void 0 : onError(message);\n        }\n    };\n// rest stays the same\n}\n_c = NetworkTest;\nvar _c;\n$RefreshReg$(_c, \"NetworkTest\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvY29tcG9uZW50cy9OZXR3b3JrVGVzdC50c3giLCJtYXBwaW5ncyI6Ijs7OztBQU1lLFNBQVNBLFlBQVksS0FBa0Q7UUFBbEQsRUFBRUMsY0FBYyxFQUFFQyxjQUFjLEVBQUVDLE9BQU8sRUFBUyxHQUFsRDtJQUNsQyw0QkFBNEI7SUFFNUIsTUFBTUMsT0FBTztRQUNYLElBQUk7WUFDRkMsU0FBUztZQUNURixvQkFBQUEsOEJBQUFBLFFBQVU7WUFDVixNQUFNRyxNQUFNLE1BQU1DLE1BQU07WUFDeEIsTUFBTUMsT0FBTyxNQUFNRixJQUFJRyxJQUFJO1lBQzNCQyxTQUFTRjtZQUNUUCxlQUFlTztRQUNqQixFQUFFLE9BQU9HLEtBQUs7WUFDWkMsUUFBUUMsS0FBSyxDQUFDLHVCQUF1QkY7WUFDckMsTUFBTUcsVUFBVTtZQUNoQlQsU0FBU1M7WUFDVFgsb0JBQUFBLDhCQUFBQSxRQUFVVztRQUNaO0lBQ0Y7QUFFQSxzQkFBc0I7QUFDeEI7S0FwQndCZCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxXb3JrXFxEZXNrdG9wXFxpbnRlcm5zaGlwIDl5dFxcY2FtZXJhXFxwcmV2YWxpZGF0aW9uXFxzcmNcXGFwcFxcY29tcG9uZW50c1xcTmV0d29ya1Rlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBQcm9wcyB7XHJcbiAgb25OZXR3b3JrU3RhdHM6IChzdGF0czogTmV0d29ya1N0YXRzKSA9PiB2b2lkO1xyXG4gIHNob3dPbmx5QnV0dG9uPzogYm9vbGVhbjtcclxuICBvbkVycm9yPzogKG1lc3NhZ2U6IHN0cmluZyB8IG51bGwpID0+IHZvaWQ7IC8vIG5ldyBvcHRpb25hbCBwcm9wXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5ldHdvcmtUZXN0KHsgb25OZXR3b3JrU3RhdHMsIHNob3dPbmx5QnV0dG9uLCBvbkVycm9yIH06IFByb3BzKSB7XHJcbiAgLy8gLi4uIHJlc3Qgb2YgeW91ciBjb2RlIC4uLlxyXG5cclxuICBjb25zdCB0ZXN0ID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgc2V0RXJyb3IobnVsbCk7XHJcbiAgICAgIG9uRXJyb3I/LihudWxsKTtcclxuICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJy9hcGkvbmV0d29yaycpO1xyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuICAgICAgc2V0U3RhdHMoZGF0YSk7XHJcbiAgICAgIG9uTmV0d29ya1N0YXRzKGRhdGEpO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ05ldHdvcmsgdGVzdCBlcnJvcjonLCBlcnIpO1xyXG4gICAgICBjb25zdCBtZXNzYWdlID0gJ0ZhaWxlZCB0byBydW4gbmV0d29yayB0ZXN0LiBQbGVhc2UgdHJ5IGFnYWluLic7XHJcbiAgICAgIHNldEVycm9yKG1lc3NhZ2UpO1xyXG4gICAgICBvbkVycm9yPy4obWVzc2FnZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gcmVzdCBzdGF5cyB0aGUgc2FtZVxyXG59XHJcbiJdLCJuYW1lcyI6WyJOZXR3b3JrVGVzdCIsIm9uTmV0d29ya1N0YXRzIiwic2hvd09ubHlCdXR0b24iLCJvbkVycm9yIiwidGVzdCIsInNldEVycm9yIiwicmVzIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsInNldFN0YXRzIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwibWVzc2FnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/NetworkTest.tsx\n"));

/***/ })

});